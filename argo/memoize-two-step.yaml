# This example demonstrates the ability to memoize a template.
# Cache can be configured in configmap. For example, if the cache
# ConfigMap looks like the following, then you should expect the node output
# retrieved from the cache to be "changed cache value". 
# Note that you also need to update `creationTimestamp` in
# `data.test-5` to be within the `memoize.maxAge` if `maxAge` is specified in the workflow spec.
# 
# apiVersion: v1
# data:
#   test-5: '{"nodeID":"memoized-hdckj","outputs":{"parameters":[{"name":"hello","value":"changed cache value","valueFrom":{"path":"/tmp/hello_world.txt"}}],"exitCode":"0"},"creationTimestamp":"2021-10-12T15:14:04Z","lastHitTimestamp":"2021-10-12T15:14:04Z"}'
# kind: ConfigMap
# metadata:
#   creationTimestamp: "2021-10-12T15:14:04Z"
#   name: my-config
#---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: memoized-simple-workflow-
spec:
  entrypoint: entrypoint-point
  templates:
  - name: entrypoint-point
    steps:
    - - name: generate-artifact
        template: whalesay
        arguments:
          parameters:
          - name: parameter
            value: "parameter-default"
    - - name: consume-artifact
        template: print-whalesay
        arguments:
          artifacts:
          - name: message
            from: "{{steps.generate-artifact.outputs.artifacts.hello}}"

  - name: whalesay
    inputs:
      parameters:
      - name: parameter
    memoize:
      key: "{{inputs.parameters.parameter}}"
      maxAge: "3000s"
      cache:
        configMap:
          name: my-config
    container:
      image: docker/whalesay:latest
      command: [sh, -c]
      args: ["cowsay {{inputs.parameters.parameter}} > /tmp/hello_world.txt"]
    outputs:
      artifacts:
      - name: hello
        path: /tmp/hello_world.txt

  - name: print-whalesay
    inputs:
      artifacts:
      - name: message
        path: /tmp/message
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["cat /tmp/message"]
